apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildToolsVersion

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debug {
            buildConfigField("String", "BASE_URL", "\"https://\"")
        }
        staging {
            buildConfigField("String", "BASE_URL", "\"https://\"")
        }
        release {
            buildConfigField("String", "BASE_URL", "\"https://\"")

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlinVersion"
    implementation "androidx.appcompat:appcompat:$libraries.appCompat"
    implementation "androidx.core:core-ktx:$libraries.appCompat"

    testImplementation "junit:junit:$libraries.junit"
    androidTestImplementation "androidx.test.ext:junit:$libraries.junitExt"
    androidTestImplementation "androidx.test.espresso:espresso-core:$libraries.espressoCore"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$libraries.coroutinesCore"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$libraries.ktxSerializationRuntime"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:$libraries.ktxSerializationConverter"
    implementation "com.squareup.retrofit2:retrofit:$libraries.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$libraries.loggingInterceptor"

    implementation "org.koin:koin-core:$libraries.koin"
    testImplementation "org.koin:koin-test:$libraries.koin"
}
